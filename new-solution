#!/bin/bash

set -e

YEAR="$1"
DAY="$2"
NAME="$3"

if [ -z "$YEAR" ] || [ -z "$DAY" ] || [ -z "$NAME" ]; then
    echo "$0 <YEAR> <DAY> <NAME>"
    exit 1
fi

DIR=$(printf "%04d/%02d-%s" "$YEAR" "$DAY" "$NAME")
if [ -d "$DIR" ]; then
    echo "Directory already exists: $DIR"
    exit 1
fi

mkdir -p "$DIR"

touch "$DIR/test.txt" "$DIR/input.txt"

PKG=$(sed 's/-//g' <<< "$NAME")
TITLE=$(sed 's/-/ /g' <<< "$NAME")

cat <<EOF > "$DIR/solution.go"
package $PKG

import (
	_ "embed"

	"github.com/jbaikge/advent-of-code/solutions"
)

//go:embed test.txt
var testData []byte

//go:embed input.txt
var inputData []byte

func init() {
	solutions.Register(new(Solution))
}

type Solution struct{}

func (*Solution) Meta() solutions.Meta {
	return solutions.Meta{
		Name:    "$TITLE",
		Year:    $YEAR,
		Problem: $DAY,
		Datas: []solutions.Data{
			{
				Name:    "Test",
				Input:   testData,
				Expect1: 0,
				Expect2: 0,
			},
			{
				Name:  "Input",
				Input: inputData,
			},
		},
	}
}

func (s *Solution) Parse(data []byte) (err error) {
	return
}

func (s *Solution) Part1() (answer int, err error) {
	return
}

func (s *Solution) Part2() (answer int, err error) {
	return
}
EOF